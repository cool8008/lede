# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-22.04

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"
      - name: Clone LEDE repository
        run: |
          rm -rf lede
          git clone https://github.com/cool8008/lede.git
          cd lede
      - name: Checkout LEDE
        uses: actions/checkout@v4
        with:
          path: lede

      - name: Print current working directory
        run: |
          cd lede
          pwd

      - name: Clone feeds script from cool8008/lede
        run: |
          cd lede
          mkdir -p scripts
          git clone --depth=1 --single-branch --branch master https://github.com/cool8008/lede.git temp_lede
          cp temp_lede/scripts/feeds scripts/
          rm -rf temp_lede

      - name: Clone metadata.pm from cool8008/lede
        run: |
          cd lede
          mkdir -p scripts
          git clone --depth=1 --single-branch --branch master https://github.com/cool8008/lede.git temp_lede
          cp temp_lede/scripts/metadata.pm scripts/
          rm -rf temp_lede

      - name: Check file permissions
        run: |
          cd lede
          pwd
          ls -l scripts/feeds
          ls -l scripts/metadata.pm

      - name: Install required Perl modules
        run: |
          cd lede
          sudo apt-get update
          sudo apt-get install -y libxml-parser-perl libarchive-zip-perl libdata-dump-perl liburi-perl libwww-perl
      - name: Add Kwrt feed
        run: |
          cd lede
          echo "src-git kiddin9_kwrt https://github.com/kiddin9/Kwrt.git;main" >> feeds.conf.default

      - name: Update feeds
        run: |
          cd lede
          if [ ! -f "./scripts/feeds" ]; then
            echo "Error: ./scripts/feeds file not found."
            exit 1
          fi
          chmod +x ./scripts/feeds
          PERL5LIB="$PWD/scripts:$PERL5LIB" ./scripts/feeds update -a
          PERL5LIB="$PWD/scripts:$PERL5LIB" ./scripts/feeds install -a
      - name: Generate configuration file
        run: |
          cd lede
          make defconfig

      - name: Download packages
        run: |
          cd lede
          make download -j16

      - name: Compile firmware
        run: |
          cd lede
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: |
          cd lede
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      - name: Upload buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: lede/artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: lede/artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: lede/bin/targets/    
